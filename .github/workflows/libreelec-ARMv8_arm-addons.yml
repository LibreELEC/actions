name: libreelec-ARMv8_arm-addons
on:
  # allows to run this workflow manually from the actions tab
  workflow_dispatch:
    inputs:
      clean_le:
        # This setting is only used (makes sense) when builds are NOT ephemeral
        description: 'Should the workflow clean the /build-root'
        default: no_clean_le
        required: true
        type: choice
        options:
        - clean_le
        - no_clean_le
      debug:
        description: 'Provide debug output within GHA run'
        default: no_debug
        required: true
        type: choice
        options:
        - debug
        - no_debug
      ephemeral:
        description: 'Target and build-root are ephemeral'
        default: ephemeral
        required: true
        type: choice
        options:
        - ephemeral
        - no_ephemeral
      upload:
        description: 'Upload the images to the release server'
        default: no_upload
        required: true
        type: choice
        options:
        - upload
        - no_upload
      buildcmd:
        description: 'addon build command to run'
        default: 'scripts/create_addon all'
        required: true
        type: string
      gitref:
        description: 'git branch or hash to build'
        default: master
        required: true
        type: string

  workflow_call:
    inputs:
      clean_le:
        # This setting is only used (makes sense) when builds are NOT ephemeral
        description: 'Should the workflow clean the /build-root'
        default: no_clean_le
        required: true
        type: string
      debug:
        description: 'Provide debug output from GHA run'
        default: no_debug
        required: true
        type: string
      ephemeral:
        description: 'Target and build-root are ephemeral'
        default: ephemeral
        required: true
        type: string
      upload:
        description: 'Upload the images to the release server'
        default: no_upload
        required: true
        type: string
      buildcmd:
        description: 'addon build command to run'
        default: 'scripts/create_addon all'
        required: true
        type: string
      gitref:
        description: 'git branch or hash to build'
        default: master
        required: true
        type: string

env:
  TZ: Australia/Melbourne
  BASEDIR: /var/media/DATA/github-actions
  # Distro Target Variables
  PROJECT: ARM
  ARCH: arm
  DEVICE: ARMv8
  TARGETBUILDDIR: build.LibreELEC-ARMv8.arm-11.0-devel
  BUILD_PERIODIC: nightly

concurrency:
  group: ARMv8_arm
  cancel-in-progress: false

jobs:
  build_libreelec:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.gitref }}${{ github.event.inputs.gitref }}
          fetch-depth: 2
          repository: "LibreELEC/LibreELEC.tv"
          path: "LibreELEC.tv"
      - name: Create docker image for build - tools/docker/focal
        run: |
          ls
          pwd
          cd LibreELEC.tv
          sed -i -e "s/RUN adduser/RUN adduser --uid $(id -u)/" tools/docker/focal/Dockerfile
          # workaround below until buildsystem does not require local cc
          sed -i -e "/^USER docker/i RUN ln -s /usr/bin/gcc-10 /usr/bin/cc" tools/docker/focal/Dockerfile
          sed -i -e 's/^CCACHE_CACHE_SIZE=.*/CCACHE_CACHE_SIZE="30G"/' config/options
          docker build --pull -t gh-${{ github.run_id }} tools/docker/focal

      - name: Prepare the LibreELEC.tv directory - setup /sources
        run: |
          cd LibreELEC.tv
          # create links that will be used from within the docker containers
          [ ! -h sources ] && ln -s /sources .

      - name: Prepare the LibreELEC.tv directory - do not leave files behind
        if: inputs.ephemeral == 'ephemeral' || github.event.inputs.ephemeral == 'ephemeral'
        run: |
          cd LibreELEC.tv
          # set the build_dir=/build
          echo "build_dir=/build" >> $GITHUB_ENV
          echo "CCACHE_DISABLE=1" >> $GITHUB_ENV
      - name: Prepare the LibreELEC.tv directory - use /build-root and /target
        if: inputs.ephemeral == 'no_ephemeral' || github.event.inputs.ephemeral == 'no_ephemeral'
        run: |
          cd LibreELEC.tv
          # create links that will be used from within the docker containers
          [ ! -h target ] && ln -s /target .
          # set the build_dir=/build-root - for NON ephemeral builds
          echo "build_dir=/build-root" >> $GITHUB_ENV

      - name: Display environment
        if: inputs.debug == 'debug' || github.event.inputs.debug == 'debug'
        run: |
          cd LibreELEC.tv
          echo "pwd: $(pwd)"
          echo "id: $(id)"
          echo "whoami: $(whoami)"
          echo "docker images: $(docker images)"
          echo "ls: $(ls -la)"
          echo
          echo "inputs.clean_le: ${{ inputs.clean_le }}"
          echo "inputs.debug: ${{ inputs.debug }}"
          echo "inputs.ephemeral: ${{ inputs.ephemeral }}"
          echo "inputs.upload: ${{ inputs.upload }}"
          echo
          echo "github.event.inputs.clean_le: ${{ github.event.inputs.clean_le }}"
          echo "github.event.inputs.debug: ${{ github.event.inputs.debug }}"
          echo "github.event.inputs.ephemeral: ${{ github.event.inputs.ephemeral }}"
          echo "github.event.inputs.upload: ${{ github.event.inputs.upload }}"

      - name: Clean LE at docker image
        if: inputs.clean_le == 'clean_le' || github.event.inputs.clean_le == 'clean_le'
        run: |
          rm -rf ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }}/.stamps
          rm -rf ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }}/*
          echo "ls: $(ls -la ${{ env.BASEDIR }}/build-root/${{ env.TARGETBUILDDIR }})"

      - name: Build LE using docker
        run: |
          cd LibreELEC.tv
          docker run --rm -v ${{ env.BASEDIR }}/sources:/sources \
                          -v ${{ env.BASEDIR }}/target:/target \
                          -v ${{ env.BASEDIR }}/build-root:/build-root \
                          -v `pwd`:/build \
                          -w /build -i \
                          -e PROJECT=${{ env.PROJECT }} \
                          -e ARCH=${{ env.ARCH }} \
                          -e DEVICE=${{ env.DEVICE }} \
                          -e ONELOG=no -e LOGCOMBINE=never \
                          -e BUILD_DIR=${{ env.build_dir }} \
                          -e BUILD_PERIODIC=${{ env.BUILD_PERIODIC }} \
                          -e CCACHE_DISABLE=${{ env.CCACHE_DISABLE }} \
                          gh-${{ github.run_id }} ${{ inputs.buildcmd }} ${{ github.event.inputs.buildcmd }}
          docker image rm -f gh-${{ github.run_id }}
        continue-on-error: true

      - name: Upload files
        if: inputs.upload == 'upload' || github.event.inputs.upload == 'upload'
        run: |
          cd LibreELEC.tv
          ls -lahR target
          scp -P ${{ secrets.PORT }} target/addons/*/*/*/*/*.zip \
          ${{ secrets.USERNAME }}@${{ secrets.HOST }}:${{ secrets.UPLOAD_TARGET }}
